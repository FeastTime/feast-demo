<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
    ">

    <context:property-placeholder ignore-unresolvable="true" location="classpath*:/META-INF/config/jdbc.properties" />
    <!-- 数据源定义 -->
    <bean id="dataSource" parent="parentDataSource">
        <!-- Connection Info -->
        <property name="driverClassName" value="${jdbc.optimus.master.driverClassName}"/>
        <property name="url" value="${jdbc.optimus.master.url}"/>
        <property name="username" value="${jdbc.optimus.master.username}"/>
        <property name="password" value="${jdbc.optimus.master.password}"/>
        <!-- Connection Validation Info -->
        <property name="validationQuery" value="${jdbc.optimus.master.validationQuery}"/>
    </bean>

    <bean id="parentDataSource"
          class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
          abstract="true">
        <!-- Connection Info -->
        <!-- Connection Validation Info -->
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <property name="testWhileIdle" value="true"/>

        <!-- Connection Pooling Info -->
        <property name="maxActive" value="${dbcp.maxActive}"/>
        <property name="maxIdle" value="${dbcp.maxIdle}"/>
        <property name="defaultAutoCommit" value="false"/>
        <!-- 连接Idle一个小时后超时 -->
        <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
        <property name="minEvictableIdleTimeMillis" value="3600000"/>
    </bean>

    <bean id="parentEntityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" abstract="true">
        <property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="${hibernate.show_sql}" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${auto.ddl}</prop>
                <prop key="hibernate.ejb.naming_strategy">com.feast.demo.hibernate.NamingStrategy</prop>
                <!-- <prop key="hibernate.query.substitutions">true=1, false=0</prop> -->
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.feast.demo.ad</value>
                <value>com.feast.demo.coupon</value>
            </list>
        </property>
    </bean>

    <bean id="entityManagerFactory" parent="parentEntityManagerFactory">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="simpleAspect" class="com.feast.demo.ad.utils.SimpleAspect"
    ></bean>

    <!-- 配置AOP -->
    <aop:config>
        <!-- 配置切点表达式  -->
        <aop:pointcut id="pointcut" expression="execution(public !void com.feast.demo.ad.service.impl.*.*(..))" />
        <!-- 配置切面及配置 -->
        <aop:aspect order="2" ref="simpleAspect">
            <!-- 前置通知 -->
            <aop:before method="beforMethod" pointcut-ref="pointcut"/>
            <!-- 后置通知 -->
            <aop:after method="afterMethod" pointcut-ref="pointcut"/>
        </aop:aspect>
    </aop:config>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    <aop:aspectj-autoproxy proxy-target-class="true" />

    <jpa:repositories base-package="com.feast.demo.ad.dao"
      entity-manager-factory-ref="entityManagerFactory"  transaction-manager-ref="transactionManager" repository-impl-postfix="Impl"/>
    <jpa:repositories base-package="com.feast.demo.coupon.dao"
      entity-manager-factory-ref="entityManagerFactory"  transaction-manager-ref="transactionManager" repository-impl-postfix="Impl"/>

    <context:component-scan base-package="com.feast.demo.ad" />
    <context:component-scan base-package="com.feast.demo.coupon" />
</beans>